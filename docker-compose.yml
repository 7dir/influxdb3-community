version: '2.1'

volumes:
  iox_data: {}
  postgres_data: {}
  grafana_data: {}

services:
  iox:
    image: ghcr.io/metrico/iox-musl:latest
    container_name: iox
    volumes:
      - ./data:/data
    environment:
      - INFLUXDB_IOX_OBJECT_STORE=file
      - INFLUXDB_IOX_DB_DIR=/data
      - INFLUXDB_IOX_BUCKET=iox
#     - INFLUXDB_IOX_CATALOG_DSN=postgres://postgres@postgres:5432/iox
      - INFLUXDB_IOX_CATALOG_DSN=sqlite:///data/catalog.sqlite
      - INFLUXDB_IOX_ROUTER_HTTP_BIND_ADDR=iox:8080
      - INFLUXDB_IOX_ROUTER_GRPC_BIND_ADDR=iox:8081
      - INFLUXDB_IOX_QUERIER_GRPC_BIND_ADDR=iox:8082
      - INFLUXDB_IOX_INGESTER_GRPC_BIND_ADDR=iox:8083
      - INFLUXDB_IOX_COMPACTOR_GRPC_BIND_ADDR=iox:8084
      - INFLUXDB_IOX_PERSIST_HOT_PARTITION_COST=0
      - LOG_FILTER=error
    restart: unless-stopped
    expose:
      - 8080
      - 8081
      - 8082
      - 8083
      - 8084
    ports:
      - 8080:8080
      - 8082:8082
#    links:
#      - postgres:postgres
#    depends_on:
#      - postgres

#  postgres:
#    image: postgres
#    container_name: postgres
#    expose:
#      - 5432
#    volumes:
#      - ./pgdata:/var/lib/postgresql/data/pgdata
#    environment:
#      - POSTGRES_HOST_AUTH_METHOD=trust
#      - POSTGRES_DB=iox
#      - PGDATA=/var/lib/postgresql/data/pgdata

  grafana:
    image: grafana/grafana:latest
    ports:
      - 8086:3000
    environment:
      - INFLUX_HOST=iox:8082
      - INFLUX_TOKEN=${INFLUXDB_TOKEN}
      - INFLUX_ORG=company
      - INFLUX_BUCKET=sensors
      - GF_INSTALL_PLUGINS=influxdata-flightsql-datasource
    volumes: 
      - ./demo/grafana/datasources:/etc/grafana/provisioning/datasources
#      - ./demo/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana/
    restart: always
    depends_on:
      - iox
